#!/bin/bash

# Script de configuración para el Sistema de Informes Psicológicos
# Este script prepara el entorno de desarrollo y producción

echo "===================================================="
echo "  Sistema de Informes Psicológicos - Configuración  "
echo "===================================================="

# Crear directorio para imágenes estáticas si no existe
mkdir -p frontend/assets/images
echo "✓ Directorio de imágenes creado"

# Crear imagen de placeholder para logos
if [ ! -f "frontend/assets/images/placeholder-logo.png" ]; then
    echo "Creando imagen placeholder..."
    # Si convert (ImageMagick) está instalado, crear una imagen
    if command -v convert &> /dev/null; then
        convert -size 200x100 canvas:lightgray \
                -font Arial -pointsize 18 -fill gray \
                -gravity center -annotate 0 "Logo" \
                frontend/assets/images/placeholder-logo.png
        echo "✓ Imagen placeholder creada"
    else
        echo "⚠ ImageMagick no está instalado. La imagen placeholder no se ha creado."
        echo "  Puedes instalar ImageMagick o crear manualmente la imagen placeholder."
    fi
fi

# Instalar dependencias solo si no existen
if [ ! -d "node_modules" ]; then
    echo "Instalando dependencias..."
    if npm install; then
        echo "✓ Dependencias instaladas correctamente"
    else
        echo "⚠ Error al instalar dependencias. Verifica tu conexión a internet."
        exit 1
    fi
else
    echo "✓ Dependencias ya instaladas"
fi

# Crear archivo .env si no existe
ENV_FILE="backend/.env"

if [ ! -f "$ENV_FILE" ]; then
    echo "Creando archivo .env..."
    cat <<EOF > "$ENV_FILE"
MONGO_URI=mongodb://localhost:27017/psychological-reports
JWT_SECRET=your_secure_jwt_secret_here
PORT=5000
EMAIL_USER=your_email@gmail.com
EMAIL_PASS=your_email_password
EMAIL_FROM_NAME=Sistema de Informes Psicológicos
EMAIL_SERVICE=gmail
FRONTEND_URL=http://localhost:5000
NODE_ENV=development

# Opciones para desarrollo
EMAIL_TEST_MODE=true

# Configuración de AI (usar variable de entorno para la clave)
OPENAI_API_KEY=${OPENAI_API_KEY}
AI_SERVICE_MOCK=true
EOF
    echo "✓ Archivo .env creado"
else
    echo "✓ Archivo .env ya existe"
fi

# Verificar cliente de MongoDB disponible
if command -v mongosh &> /dev/null; then
    MONGO_CMD="mongosh"
elif command -v mongo &> /dev/null; then
    MONGO_CMD="mongo"
else
    echo "⚠ No se encontró un cliente de MongoDB instalado (mongosh o mongo)."
    exit 1
fi

# Verificar conexión a MongoDB
echo "Verificando conexión a MongoDB..."
$MONGO_CMD --eval "db.version()" mongodb://localhost:27017/psychological-reports > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "✓ Conexión a MongoDB exitosa"
else
    echo "⚠ No se pudo conectar a MongoDB. Asegúrate de que MongoDB esté en ejecución."
    echo "  La aplicación requiere MongoDB para funcionar correctamente."
    exit 1
fi

# Crear scripts para iniciar la aplicación
echo "Creando scripts de inicio..."

npm set-script dev "nodemon backend/server.js"
npm set-script start "node backend/server.js"
npm set-script setup "bash ./setup.sh"

echo "✓ Scripts de inicio creados"

# Mensaje final
echo ""
echo "===================================================="
echo "  Configuración completada con éxito                "
echo "===================================================="
echo ""
echo "Para ejecutar la aplicación en modo desarrollo:"
echo "  npm run dev"
echo ""
echo "Para ejecutar la aplicación en modo producción:"
echo "  npm start"
echo ""
echo "Accede a la aplicación en: http://localhost:5000"
echo ""
echo "Nota: Asegúrate de que MongoDB esté en ejecución"
echo "===================================================="
echo ""
echo "Si encuentras problemas ejecutando este script, intenta:"
echo "  chmod +x setup.sh && ./setup.sh"
